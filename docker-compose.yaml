version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: postgres-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: courses
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d courses"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: mohdafzal123/courses-backend:latest
    container_name: courses-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/courses
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      # If your app needs CORS, you can keep it permissive or remove since we'll proxy:
      # CORS_ALLOWED_ORIGINS: http://localhost:5173
    ports:
      - "8080:8080"   # optional for host-side debugging; proxy will talk to container directly
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network

  # Your existing frontend image stays as-is, but we won't expose it directly to the host.
  frontend:
    image: mohdafzal123/courses-frontend:latest
    container_name: courses-frontend
    expose:
      - "80"
    depends_on:
      - backend
    networks:
      - backend-network

  # NEW: Reverse proxy that serves the frontend and proxies /api to the backend
  web:
    image: nginx:1.27-alpine
    container_name: courses-gateway
    depends_on:
      - frontend
      - backend
    ports:
      - "5173:80"   # visit http://localhost:5173
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres-data:
